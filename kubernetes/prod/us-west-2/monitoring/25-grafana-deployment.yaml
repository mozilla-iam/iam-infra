apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: monitoring
  name: grafana-persistent-storage
spec:
  storageClassName: grafana-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: storage.k8s.io/v1beta1
kind: StorageClass
metadata:
  name: grafana-storage
provisioner: kubernetes.io/aws-ebs
parameters:
  type: gp2
allowVolumeExpansion: true
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - image: grafana/grafana:5.3.1
        name: grafana
        env:
        - name: GF_SERVER_ROOT_URL
          value: "https://grafana.infra.iam.mozilla.com/"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "false"
        - name: GF_AUTH_BASIC_ENABLED
          value: "false"
        - name: GF_AUTH_DISABLE_LOGIN_FORM
          value: "true"
        - name: GF_AUTH_GENERIC_OAUTH_NAME
          value: Auth0
        - name: GF_AUTH_GENERIC_OAUTH_ENABLED
          value: "true"
        - name: GF_AUTH_GENERIC_OAUTH_SCOPES
          value: "openid profile email"
        - name: GF_AUTH_GENERIC_OAUTH_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: grafana-oidc
              key: client_id
        - name: GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: grafana-oidc
              key: client_secret
        - name: GF_AUTH_GENERIC_OAUTH_AUTH_URL
          valueFrom:
            secretKeyRef:
              name: grafana-oidc
              key: auth_url
        - name: GF_AUTH_GENERIC_OAUTH_TOKEN_URL
          valueFrom:
            secretKeyRef:
              name: grafana-oidc
              key: token_url
        - name: GF_AUTH_GENERIC_OAUTH_API_URL
          valueFrom:
            secretKeyRef:
              name: grafana-oidc
              key: api_url
        ports:
        - containerPort: 3000
          name: http
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-persistent-storage
          readOnly: false
        - mountPath: /etc/grafana/provisioning/datasources
          name: grafana-datasources
          readOnly: false
        - mountPath: /etc/grafana/provisioning/dashboards
          name: grafana-dashboards
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/0/k8s-worker-nodes
          name: grafana-dashboard-k8s-worker-nodes
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/0/k8s-cluster-overview
          name: grafana-dashboard-k8s-cluster-overview
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/0/k8s-deployments
          name: grafana-dashboard-k8s-deployments
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/0/k8s-pod-detailed
          name: grafana-dashboard-k8s-pod-detailed
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/0/nginx-ingress-controller
          name: grafana-dashboard-nginx-ingress-controller
          readOnly: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        fsGroup: 65534
      serviceAccountName: grafana
      volumes:
      - name: grafana-persistent-storage
        persistentVolumeClaim:
          claimName: grafana-persistent-storage
      - name: grafana-datasources
        secret:
          secretName: grafana-datasources
      - configMap:
          name: grafana-dashboards
        name: grafana-dashboards
      - configMap:
          name: grafana-dashboard-k8s-worker-nodes
        name: grafana-dashboard-k8s-worker-nodes
      - configMap:
          name: grafana-dashboard-k8s-deployments
        name: grafana-dashboard-k8s-deployments
      - configMap:
          name: grafana-dashboard-k8s-pod-detailed
        name: grafana-dashboard-k8s-pod-detailed
      - configMap:
          name: grafana-dashboard-k8s-cluster-overview
        name: grafana-dashboard-k8s-cluster-overview
      - configMap:
          name: grafana-dashboard-nginx-ingress-controller
        name: grafana-dashboard-nginx-ingress-controller

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
spec:
  ports:
  - name: http
    port: 3000
    targetPort: http
  selector:
    app: grafana
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana
  namespace: monitoring
